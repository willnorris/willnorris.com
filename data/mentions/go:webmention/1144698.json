{
  "type": "entry",
  "author": {
    "type": "card",
    "name": "Aaron Parecki",
    "photo": "https://webmention.io/avatar/aaronparecki.com/41061f9de825966faa22e9c42830e1d4a614a321213b4575b9488aa93f89817a.jpg",
    "url": "https://aaronparecki.com/"
  },
  "url": "https://aaronparecki.com/2018/06/30/11/your-first-webmention",
  "published": "2018-06-30T20:35:00-07:00",
  "wm-received": "2021-05-04T22:21:21Z",
  "wm-id": 1144698,
  "wm-source": "https://aaronparecki.com/2018/06/30/11/your-first-webmention",
  "wm-target": "https://willnorris.com/go/webmention",
  "name": "Sending your First Webmention from Scratch",
  "syndication": [
    "https://news.indieweb.org/en/aaronparecki.com/2018/06/30/11/your-first-webmention"
  ],
  "content": {
    "html": "<p><img src=\"https://aaronparecki.com/2018/06/30/11/webmention-rocks.png\" class=\"u-featured\" alt=\"webmention-rocks.png\" /></p>\n\n<p>Webmention is one of the fundamental indieweb building blocks. It enables rich interactions between websites, like posting a comment or favorite on one site from another site. This post will walk you through the simplest way to get started sending webmentions to other sites so that you can use your own site to join the conversations happening on the Indie Web.</p>\n\n<p>So what do you need to walk through this tutorial? We'll use static files and simple command line tools so that you can easily adapt this to any environment or programming language later.</p>\n\n<h2>Get started</h2>\n\n<p>First, we'll create a new HTML file that we'll use to contain the comment to post. At the very minimum, that file will need to contain a link to the post we're replying to.</p>\n\n<pre>\n&lt;!doctype html&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Hello World&lt;/title&gt;\n&lt;body&gt;\n  &lt;p&gt;in reply to: &lt;a href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\"&gt;@aaronpk&lt;/a&gt;&lt;/p&gt;\n  &lt;p&gt;Trying out this guide to sending webmentions&lt;/p&gt;\n&lt;/body&gt;\n</pre>\n\n<p>Go ahead and copy that HTML and save it into a new file on your web server, for example: <a href=\"https://aaronpk.com/reply.html\">https://aaronpk.com/reply.html</a>. Take your new post's URL and paste it into the webmention form <a href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention#responses\">at the bottom of this post</a>. After a few seconds, reload this page and you should see your post show up under \"Other Mentions\"!</p>\n\n<p><img src=\"https://aaronparecki.com/2018/06/30/11/reply-1.png\" alt=\"First Reply\" /></p>\n\n<h2>Making it look better</h2>\n\n<p>That's a great start! But you might be wondering where your comment text is. To make your comment show up better on other peoples' websites, you'll need to add a little bit of HTML markup to tell the site where your comment text is and to add your name and photo.</p>\n\n<p>Let's take the HTML from before and add a couple pieces.</p>\n\n<pre>\n&lt;!doctype html&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Hello World&lt;/title&gt;\n&lt;body&gt;\n  <b>&lt;div class=\"h-entry\"&gt;</b>\n    &lt;p&gt;in reply to: &lt;a <b>class=\"u-in-reply-to\"</b> href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\"&gt;@aaronpk&lt;/a&gt;&lt;/p&gt;\n    &lt;p <b>class=\"e-content\"</b>&gt;Trying out this guide to sending webmentions&lt;/p&gt;\n  <b>&lt;/div&gt;</b>\n&lt;/body&gt;\n</pre>\n\n<p>Note the parts added in green. These are Microformats! This tells the site that's receiving your webmention where to find specific parts of your post. We first wrap the whole post in a <code>&lt;div class=\"h-entry\"&gt;</code> to indicate that this is a post. Then we add a class to the <code>&lt;a&gt;</code> tag of the post we're replying to, as well as a class to the element that contains our reply text.</p>\n\n<p>Now, take your URL and paste it into <a href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention#responses\">the webmention form</a> below again. After a few seconds, reload the page and your reply should look more complete here!</p>\n\n<p><img src=\"https://aaronparecki.com/2018/06/30/11/reply-2.png\" alt=\"Second Reply\" /></p>\n\n<p>Now we see the text of the reply, and also notice that it moved out of the \"Other Mentions\" section and shows up along with the rest of the replies!</p>\n\n<p>Of course this web page still looks pretty plain on your own website, but that's up to you to make it look however you like for visitors visiting your website! As long as you leave the <code>h-entry</code> and other Microformats in your post, you can add additional markup and style the page however you like!</p>\n\n<h2>Adding your name and photo</h2>\n\n<p>Let's make the comment appear with your name and photo now! To do this, you'll need to add a little section to your web page that indicates who wrote the post.</p>\n\n<p>In Microformats, the author of a post is represented as an <code>h-card</code>s. An <code>h-card</code> is another type of object like <code>h-entry</code>, but is intended to represent people or places instead of posts. Below is a simple <code>h-card</code> that we'll add to the post.</p>\n\n<pre>\n&lt;div class=\"h-card\"&gt;\n  &lt;img src=\"https://aaronpk.com/images/aaronpk.jpg\" class=\"u-photo\" width=\"40\"&gt;\n  &lt;a href=\"https://aaronpk.com/\" class=\"u-url p-name\"&gt;Aaron Parecki&lt;/a&gt;\n&lt;/div&gt;\n</pre>\n\n<p>When we add this <code>h-card</code> into the post we've written, we need to tell it that this <code>h-card</code> is the author of the post. To do that, add the class <code>u-author</code> before the <code>h-card</code> class like the example below.</p>\n\n<pre>\n&lt;!doctype html&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Hello World&lt;/title&gt;\n&lt;body&gt;\n  &lt;div class=\"h-entry\"&gt;\n    <b>&lt;div class=\"u-author h-card\"&gt;\n      &lt;img src=\"https://aaronpk.com/images/aaronpk.jpg\" class=\"u-photo\" width=\"40\"&gt;\n      &lt;a href=\"https://aaronpk.com/\" class=\"u-url p-name\"&gt;Aaron Parecki&lt;/a&gt;\n    &lt;/div&gt;</b>\n    &lt;p&gt;in reply to: &lt;a class=\"u-in-reply-to\" href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\"&gt;@aaronpk&lt;/a&gt;&lt;/p&gt;\n    &lt;p class=\"e-content\"&gt;Trying out this guide to sending webmentions&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</pre>\n\n<p>Now when you re-send the webmention, the receiver will find your author name, photo and URL and show it in the comment!</p>\n\n<p><img src=\"https://aaronparecki.com/2018/06/30/11/reply-3.png\" alt=\"Second Reply\" /></p>\n\n<p>Great job! If you've successfully gotten this far, you're now able to comment on things and even RSVP to events using your own website!</p>\n\n<p>One more detail that you'll want to include on your posts is the date that your post was written. This will ensure the receiving website shows the correct timestamp of your post. If you eventually incorporate this into a static site generator or CMS where you show a list of your replies all on one page, then you'll also want to add a permalink to the individual reply in this post. Typically an easy way to solve both is with the markup below.</p>\n\n<pre>\n&lt;a href=\"https://aaronpk.com/reply.html\" class=\"u-url\"&gt;\n  &lt;time class=\"dt-published\" datetime=\"2018-06-30T17:15:00-0700\"&gt;July 30, 2018&lt;/time&gt;\n&lt;/a&gt;\n</pre>\n\n<p>We can add that to the post below the content.</p>\n\n<pre>\n&lt;!doctype html&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Hello World&lt;/title&gt;\n&lt;body&gt;\n  &lt;div class=\"h-entry\"&gt;\n    &lt;div class=\"u-author h-card\"&gt;\n      &lt;img src=\"https://aaronpk.com/images/aaronpk.jpg\" class=\"u-photo\" width=\"40\"&gt;\n      &lt;a href=\"https://aaronpk.com/\" class=\"u-url p-name\"&gt;Aaron Parecki&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;p&gt;in reply to: &lt;a class=\"u-in-reply-to\" href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\"&gt;@aaronpk&lt;/a&gt;&lt;/p&gt;\n    &lt;p class=\"e-content\"&gt;Trying out this guide to sending webmentions&lt;/p&gt;\n    <b>&lt;p&gt;\n      &lt;a href=\"https://aaronpk.com/reply.html\" class=\"u-url\"&gt;\n        &lt;time class=\"dt-published\" datetime=\"2018-06-30T17:15:00-0700\"&gt;July 30, 2018&lt;/time&gt;\n      &lt;/a&gt;\n    &lt;/p&gt;</b>\n  &lt;/div&gt;\n&lt;/body&gt;\n</pre>\n\n<h2>Automatically sending webmentions</h2>\n\n<p>The last piece to the puzzle is having your website send webmentions automatically when a new post is created.</p>\n\n<p>This part will require writing some code in your particular language of choice. You'll start by making an HTTP request to get the contents of the page you're replying to, then looking in the response for the webmention endpoint.</p>\n\n<p>We can simulate this on the command line using curl and grep.</p>\n\n<pre>\ncurl -si https://aaronparecki.com/2018/06/30/11/your-first-webmention | grep rel=\\\"webmention\\\"\n</pre>\n\n<p>The response will include any HTTP <code>Link</code> headers or HTML <code>&lt;link&gt;</code> tags that have a rel value of \"webmention\".</p>\n\n<pre>\nLink: &lt;https://webmention.io/aaronpk/webmention&gt;; rel=\"webmention\"\n&lt;link rel=\"webmention\" href=\"https://webmention.io/aaronpk/webmention\"&gt;\n</pre>\n\n<p>If you get more than one, the first one wins. You'll need to extract the URL from the tag and then send the webmention there.</p>\n\n<p>Sending a webmention is just a simple <code>POST</code> request to the webmention endpoint with two URLs: the URL of your post (source) and the URL of the post you're replying to (target).</p>\n\n<pre>\ncurl -si https://webmention.io/aaronpk/webmention \\\n  -d source=https://aaronpk.com/reply.html \\\n  -d target=https://aaronparecki.com/2018/06/30/11/your-first-webmention\n</pre>\n\n<p>The only significant part of the response is the HTTP response code. Any <code>2xx</code> response code is considered a success. You'll most often receive either a <code>202</code> which indicates that the webmention processing is happening asynchronously, or if the receiver processes webmentions synchronously and everything worked, you'll get a <code>201</code> or <code>200</code>.</p>\n\n<p>In practice, you'll probably use a library for discovering the endpoint and sending the webmention, so here are a few pointers to start you out in a variety of languages.</p>\n\n<ul><li><a href=\"https://github.com/jgarber623/webmention-endpoint-ruby\">Ruby</a></li>\n<li><a href=\"https://github.com/indieweb/mention-client-php\">PHP</a></li>\n<li><a href=\"https://www.npmjs.com/package/send-webmention\">Node</a></li>\n<li><a href=\"https://github.com/bear/ronkyuu\">Python</a></li>\n<li><a href=\"https://willnorris.com/go/webmention\">Go</a></li>\n<li><a href=\"https://github.com/ckruse/webmentions-elixir\">Elixir</a></li>\n<li><a href=\"https://indieweb.org/Webmention-developer#Libraries\">...more on indieweb.org</a></li>\n</ul><p>Hopefully this guide was helpful to get you going in the right direction!</p>\n\n<p>If you want to dive into the weeds, check out the <a href=\"https://www.w3.org/TR/webmention/\">Webmention spec</a> as well as <a href=\"https://indieweb.org/reply\">more details on reply posts</a>.</p>\n\n<p>When you want to put your automatic webmention sending implementation to the test, try sending webmentions to all of the links on the test suite, <a href=\"https://webmention.rocks/\">webmention.rocks</a>!</p>\n\n<p>If you have any questions or run into any issues, feel free to ping me or anyone else in the <a href=\"https://indieweb.org/discuss\">IndieWeb chat</a>!</p>\n\n<p></p>",
    "text": "Webmention is one of the fundamental indieweb building blocks. It enables rich interactions between websites, like posting a comment or favorite on one site from another site. This post will walk you through the simplest way to get started sending webmentions to other sites so that you can use your own site to join the conversations happening on the Indie Web.\n\nSo what do you need to walk through this tutorial? We'll use static files and simple command line tools so that you can easily adapt this to any environment or programming language later.\n\nGet started\n\nFirst, we'll create a new HTML file that we'll use to contain the comment to post. At the very minimum, that file will need to contain a link to the post we're replying to.\n\n\n<!doctype html>\n<meta charset=\"utf-8\">\n<title>Hello World</title>\n<body>\n  <p>in reply to: <a href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\">@aaronpk</a></p>\n  <p>Trying out this guide to sending webmentions</p>\n</body>\n\n\nGo ahead and copy that HTML and save it into a new file on your web server, for example: https://aaronpk.com/reply.html. Take your new post's URL and paste it into the webmention form at the bottom of this post. After a few seconds, reload this page and you should see your post show up under \"Other Mentions\"!\n\n\n\nMaking it look better\n\nThat's a great start! But you might be wondering where your comment text is. To make your comment show up better on other peoples' websites, you'll need to add a little bit of HTML markup to tell the site where your comment text is and to add your name and photo.\n\nLet's take the HTML from before and add a couple pieces.\n\n\n<!doctype html>\n<meta charset=\"utf-8\">\n<title>Hello World</title>\n<body>\n  <div class=\"h-entry\">\n    <p>in reply to: <a class=\"u-in-reply-to\" href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\">@aaronpk</a></p>\n    <p class=\"e-content\">Trying out this guide to sending webmentions</p>\n  </div>\n</body>\n\n\nNote the parts added in green. These are Microformats! This tells the site that's receiving your webmention where to find specific parts of your post. We first wrap the whole post in a <div class=\"h-entry\"> to indicate that this is a post. Then we add a class to the <a> tag of the post we're replying to, as well as a class to the element that contains our reply text.\n\nNow, take your URL and paste it into the webmention form below again. After a few seconds, reload the page and your reply should look more complete here!\n\n\n\nNow we see the text of the reply, and also notice that it moved out of the \"Other Mentions\" section and shows up along with the rest of the replies!\n\nOf course this web page still looks pretty plain on your own website, but that's up to you to make it look however you like for visitors visiting your website! As long as you leave the h-entry and other Microformats in your post, you can add additional markup and style the page however you like!\n\nAdding your name and photo\n\nLet's make the comment appear with your name and photo now! To do this, you'll need to add a little section to your web page that indicates who wrote the post.\n\nIn Microformats, the author of a post is represented as an h-cards. An h-card is another type of object like h-entry, but is intended to represent people or places instead of posts. Below is a simple h-card that we'll add to the post.\n\n\n<div class=\"h-card\">\n  <img src=\"https://aaronpk.com/images/aaronpk.jpg\" class=\"u-photo\" width=\"40\">\n  <a href=\"https://aaronpk.com/\" class=\"u-url p-name\">Aaron Parecki</a>\n</div>\n\n\nWhen we add this h-card into the post we've written, we need to tell it that this h-card is the author of the post. To do that, add the class u-author before the h-card class like the example below.\n\n\n<!doctype html>\n<meta charset=\"utf-8\">\n<title>Hello World</title>\n<body>\n  <div class=\"h-entry\">\n    <div class=\"u-author h-card\">\n      <img src=\"https://aaronpk.com/images/aaronpk.jpg\" class=\"u-photo\" width=\"40\">\n      <a href=\"https://aaronpk.com/\" class=\"u-url p-name\">Aaron Parecki</a>\n    </div>\n    <p>in reply to: <a class=\"u-in-reply-to\" href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\">@aaronpk</a></p>\n    <p class=\"e-content\">Trying out this guide to sending webmentions</p>\n  </div>\n</body>\n\n\nNow when you re-send the webmention, the receiver will find your author name, photo and URL and show it in the comment!\n\n\n\nGreat job! If you've successfully gotten this far, you're now able to comment on things and even RSVP to events using your own website!\n\nOne more detail that you'll want to include on your posts is the date that your post was written. This will ensure the receiving website shows the correct timestamp of your post. If you eventually incorporate this into a static site generator or CMS where you show a list of your replies all on one page, then you'll also want to add a permalink to the individual reply in this post. Typically an easy way to solve both is with the markup below.\n\n\n<a href=\"https://aaronpk.com/reply.html\" class=\"u-url\">\n  <time class=\"dt-published\" datetime=\"2018-06-30T17:15:00-0700\">July 30, 2018</time>\n</a>\n\n\nWe can add that to the post below the content.\n\n\n<!doctype html>\n<meta charset=\"utf-8\">\n<title>Hello World</title>\n<body>\n  <div class=\"h-entry\">\n    <div class=\"u-author h-card\">\n      <img src=\"https://aaronpk.com/images/aaronpk.jpg\" class=\"u-photo\" width=\"40\">\n      <a href=\"https://aaronpk.com/\" class=\"u-url p-name\">Aaron Parecki</a>\n    </div>\n    <p>in reply to: <a class=\"u-in-reply-to\" href=\"https://aaronparecki.com/2018/06/30/11/your-first-webmention\">@aaronpk</a></p>\n    <p class=\"e-content\">Trying out this guide to sending webmentions</p>\n    <p>\n      <a href=\"https://aaronpk.com/reply.html\" class=\"u-url\">\n        <time class=\"dt-published\" datetime=\"2018-06-30T17:15:00-0700\">July 30, 2018</time>\n      </a>\n    </p>\n  </div>\n</body>\n\n\nAutomatically sending webmentions\n\nThe last piece to the puzzle is having your website send webmentions automatically when a new post is created.\n\nThis part will require writing some code in your particular language of choice. You'll start by making an HTTP request to get the contents of the page you're replying to, then looking in the response for the webmention endpoint.\n\nWe can simulate this on the command line using curl and grep.\n\n\ncurl -si https://aaronparecki.com/2018/06/30/11/your-first-webmention | grep rel=\\\"webmention\\\"\n\n\nThe response will include any HTTP Link headers or HTML <link> tags that have a rel value of \"webmention\".\n\n\nLink: <https://webmention.io/aaronpk/webmention>; rel=\"webmention\"\n<link rel=\"webmention\" href=\"https://webmention.io/aaronpk/webmention\">\n\n\nIf you get more than one, the first one wins. You'll need to extract the URL from the tag and then send the webmention there.\n\nSending a webmention is just a simple POST request to the webmention endpoint with two URLs: the URL of your post (source) and the URL of the post you're replying to (target).\n\n\ncurl -si https://webmention.io/aaronpk/webmention \\\n  -d source=https://aaronpk.com/reply.html \\\n  -d target=https://aaronparecki.com/2018/06/30/11/your-first-webmention\n\n\nThe only significant part of the response is the HTTP response code. Any 2xx response code is considered a success. You'll most often receive either a 202 which indicates that the webmention processing is happening asynchronously, or if the receiver processes webmentions synchronously and everything worked, you'll get a 201 or 200.\n\nIn practice, you'll probably use a library for discovering the endpoint and sending the webmention, so here are a few pointers to start you out in a variety of languages.\n\nRuby\nPHP\nNode\nPython\nGo\nElixir\n...more on indieweb.org\nHopefully this guide was helpful to get you going in the right direction!\n\nIf you want to dive into the weeds, check out the Webmention spec as well as more details on reply posts.\n\nWhen you want to put your automatic webmention sending implementation to the test, try sending webmentions to all of the links on the test suite, webmention.rocks!\n\nIf you have any questions or run into any issues, feel free to ping me or anyone else in the IndieWeb chat!"
  },
  "mention-of": "https://willnorris.com/go/webmention",
  "wm-property": "mention-of",
  "wm-private": false
}